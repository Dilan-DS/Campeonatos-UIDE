# Generated by Django 5.2.3 on 2025-06-21 19:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Deporte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
                ("descripcion", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrador"),
                            ("DELEGADO", "Delegado de Carrera"),
                            ("JUGADOR", "Jugador"),
                        ],
                        max_length=10,
                    ),
                ),
                ("carrera", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="usuarios_custom",
                        related_query_name="usuario_custom",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="usuarios_custom",
                        related_query_name="usuario_custom",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Campeonato",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
                ("descripcion", models.TextField()),
                (
                    "reglamento",
                    models.FileField(blank=True, null=True, upload_to="reglamentos/"),
                ),
                ("fecha_inicio", models.DateField()),
                ("fecha_fin", models.DateField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("INSCRIPCION", "Inscripción Abierta"),
                            ("CERRADO", "Inscripción Cerrada"),
                            ("EN_CURSO", "En Curso"),
                            ("FINALIZADO", "Finalizado"),
                        ],
                        default="INSCRIPCION",
                        max_length=20,
                    ),
                ),
                (
                    "dias_partido",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("LUNES", "Lunes"),
                            ("MARTES", "Martes"),
                            ("MIERCOLES", "Miércoles"),
                            ("JUEVES", "Jueves"),
                            ("VIERNES", "Viernes"),
                            ("SABADO", "Sábado"),
                            ("DOMINGO", "Domingo"),
                        ],
                        default=[],
                        max_length=52,
                    ),
                ),
                (
                    "delegado",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campeonatos_delegado",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deporte",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campeonatos",
                        to="core.deporte",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Arbitro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("apellido", models.CharField(max_length=100)),
                ("experiencia", models.TextField()),
                ("contacto", models.CharField(max_length=100)),
                ("estado", models.BooleanField(default=True)),
                (
                    "deportes",
                    models.ManyToManyField(related_name="arbitros", to="core.deporte"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Equipo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("carrera", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="logos_equipos/"
                    ),
                ),
                ("aprobado", models.BooleanField(default=False)),
                (
                    "campeonato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipos",
                        to="core.campeonato",
                    ),
                ),
                (
                    "delegado",
                    models.ForeignKey(
                        limit_choices_to={"rol": "DELEGADO"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("campeonato", "nombre")},
            },
        ),
        migrations.CreateModel(
            name="EstadisticasCampeonato",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("partidos_jugados", models.PositiveIntegerField(default=0)),
                ("partidos_ganados", models.PositiveIntegerField(default=0)),
                ("partidos_empatados", models.PositiveIntegerField(default=0)),
                ("partidos_perdidos", models.PositiveIntegerField(default=0)),
                ("goles_anotados", models.PositiveIntegerField(default=0)),
                ("goles_recibidos", models.PositiveIntegerField(default=0)),
                ("puntos_obtenidos", models.PositiveIntegerField(default=0)),
                ("canastas_anotadas", models.PositiveIntegerField(default=0)),
                ("tarjetas_amarillas", models.PositiveIntegerField(default=0)),
                ("tarjetas_rojas", models.PositiveIntegerField(default=0)),
                (
                    "campeonato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="estadisticas",
                        to="core.campeonato",
                    ),
                ),
                (
                    "equipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="estadisticas",
                        to="core.equipo",
                    ),
                ),
            ],
            options={
                "unique_together": {("campeonato", "equipo")},
            },
        ),
        migrations.CreateModel(
            name="Jugador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_camiseta", models.PositiveIntegerField()),
                ("edad", models.PositiveIntegerField()),
                ("goles", models.PositiveIntegerField(default=0)),
                ("puntos", models.PositiveIntegerField(default=0)),
                ("canastas", models.PositiveIntegerField(default=0)),
                ("tarjetas_amarillas", models.PositiveIntegerField(default=0)),
                ("tarjetas_rojas", models.PositiveIntegerField(default=0)),
                (
                    "equipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jugadores",
                        to="core.equipo",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        limit_choices_to={"rol": "JUGADOR"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("equipo", "numero_camiseta")},
            },
        ),
        migrations.CreateModel(
            name="Partido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateField()),
                ("hora", models.TimeField()),
                ("lugar", models.CharField(max_length=100)),
                (
                    "resultado_local",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "resultado_visitante",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PROGRAMADO", "Programado"),
                            ("EN_CURSO", "En Curso"),
                            ("FINALIZADO", "Finalizado"),
                        ],
                        default="PROGRAMADO",
                        max_length=20,
                    ),
                ),
                (
                    "arbitro",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.arbitro",
                    ),
                ),
                (
                    "campeonato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partidos",
                        to="core.campeonato",
                    ),
                ),
                (
                    "equipo_local",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partidos_locales",
                        to="core.equipo",
                    ),
                ),
                (
                    "equipo_visitante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partidos_visitantes",
                        to="core.equipo",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("campeonato", "fecha", "hora", "equipo_local", "equipo_visitante")
                },
            },
        ),
    ]
